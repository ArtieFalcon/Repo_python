Commiting to Git 
1) Save JNotebook in JLab
2) GIT BASH: git status #(GIT BASH = Terminal)
3) GIT BASH: git add <file-name>
4) GIT BASH: git commit <file-name> #(or git commit -a)
5) GIT BASH EDDITOR: # 1) press i
		       2) type <commit-name>
			3) press Esc
			4) type :x! #save and exit
6) GIT BASH: git push
7) check in remote repo

#COPY - highlight text + Enter
#PASTE - right button click

    #Run JN from different directory:
jupyter notebook --notebook-dir C:\Users\Artemiy\Repo_python
    #Change directory in bash:
cd C:\Users\Artemiy\Repo_python

    #Branches WORK:
    #Create and switch to a new branch (in local repo):
git checkout <existing_branch> #switch
git checkout -b <new branch name> #create and switch
git switch <existing_branch> #switch
git switch -c <non_existing_branch> #create and switch
    #work\changing file
git status
git add <file-name> #(OR git add -A)
git commit <file-name> #(OR git commit -a)
#No push possible (bc its a local branch) - may try push - it won't work
    #MERGE two branches (loacaly). Remote repo doesn't know about second brench
git checkout <main-branch-name> #switch to original brench
git merge <merged-branch-name> 
git status #to understand that push is needed of commited changes
git push 
    #DELETE old branch
git branch â€“delete old-branch
git branch -d old-branch

    #create new branch in remote repo
    #before making changes in file localy - make commit&push - to make up-to-date files with remote repo
git pull #to check everything is up-to-date
git checkout <branch_name_from_remote_repo> #switch to new remote branch 
git branch #to make sure you are now on new branch





